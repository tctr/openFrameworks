plugins {
    id  'com.android.library'
}



// pointing to cmake's source code for the same project
def PRJ_SRC_ROOT = './'
def ofRoot(){ return '../../../../' }
def OFX_OPENCV = ofRoot() + 'addons/ofxOpenCv'
def enableProguardInReleaseBuilds = true
def enableProguardInDebugBuilds = true
tasks.register("prepareKotlinBuildScriptModel"){}


android {
    compileSdkVersion 33
    //ndkPath "/Users/~/Documents/android-ndk-r21e"  // Point to your own NDK if needed
    //ndkVersion "23.1.7779620" //NDK will automatically sideload with this
    ndkVersion '24.0.8215888'
    buildToolsVersion '32.0.0'

    // Enable generation of Prefab packages and include them in the library's AAR.
//    buildFeatures {
//        prefabPublishing true
//    }
//
//    buildFeatures {
//        prefab true
//    }

//    android.buildFeatures.prefabPublishing true


    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 15
        versionName '15'
        ndk.abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86' //, 'x86_64'

        externalNativeBuild {
                cmake {
                    arguments "-DANDROID_STL=c++_shared",
                            "-DANDROID_ARM_NEON=TRUE",
                            "-DANDROID_TOOLCHAIN=clang",
                            "-DTARGET_OPENGLES=TRUE"
			    abiFilters 'armeabi-v7a', 'arm64-v8a' //, 'x86', 'x86_64'
                }
        }
        multiDexEnabled false
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources false
            jniDebuggable false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro'
//            packagingOptions {
//                doNotStrip '**/*.so'
//            }
        }
        debug {
            shrinkResources false
            jniDebuggable true
            debuggable true
//            packagingOptions {
//                doNotStrip '**/*.so'
//            }
        }
    }
    sourceSets {
        main {
            manifest.srcFile "${PRJ_SRC_ROOT}/AndroidManifest.xml"
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    // Include the "mylibrary" module from the native build system in the AAR,
    // and export the headers in src/main/cpp/include to its consumers
    prefab {
        ofxOpenCVAndroid {
            //headers "src/main/cpp/include"
        }
    }

    // Avoid packing the unnecessary libraries into final AAR. For details
    // refer to https://issuetracker.google.com/issues/168777344#comment5
    // Note that if your AAR also contains Java/Kotlin APIs, you should not
    // exclude libraries that are used by those APIs.
    packagingOptions {
//        exclude("**/libopenFrameworksAndroid.so")
//        exclude("**/classes.jar")
    }
}

dependencies {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "com.getkeepsafe.relinker:relinker:1.4.4"

}